.contact-section {
    background-color: #f5f7f8;
    padding: 40px;
    border-radius: 10px;
  }
  
  .contact-heading {
    color: $primary;
    font-weight: bold;

  }
  
  .form-control {
    border-radius: 20px;
    padding: 10px;
  }
  
  .submit-btn {
    background-color: #002147;
    color: #fff;
    border-radius: 25px;
    padding: 10px 20px;
    &:hover {
      background-color: #001530;
    }
  }
  
  .contact-info {
    color: #333;
    i {
      font-size: 1.5rem;
      color: #e74c3c;
      margin-right: 10px;
    }
  }

  .custom-form {
    input,textarea {
      border: none ;
      border-radius: 0 ;
      background-color: transparent;
      border-bottom: 1px solid gray ;
  
      &::selection {
        border: 0 ;
        border-bottom: 1px solid $primary ; // replace $primary with a valid color or variable
        background-color: transparent;
      }
  
      &:focus {
        border: 0 ;
        background-color: transparent;
        border-bottom: 1px solid $primary ; // replace $primary with a valid color or variable
        box-shadow: none ;  // This will remove Bootstrap's focus shadow
        outline: none ;      // This removes the default outline applied on focus
      }
    }
  }


  // Keyframe animation
@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

// Header text animation
.services-header__text {
  animation: fadeIn 2s ease-out;
  animation-delay: 1s;
  opacity: 0; // Start with hidden text
  animation-fill-mode: forwards; // Ensure it stays visible after animation
}



// Keyframe animation for scaling the image
@keyframes scaleIn {
  0% {
    transform: scaleY(0); // Start with the image scaled to 0 height
    transform-origin: top; // Set the transform origin to the top
  }
  100% {
    transform: scaleY(1); // End with the image at its full size
    transform-origin: top;
  }
}

// Apply animation to the image
.services-header__image {
  animation: scaleIn 1s ease-out;
  transform-origin: top; // Ensures scaling happens from the top
  animation-fill-mode: forwards; // Keeps the final state after animation
}


  
  